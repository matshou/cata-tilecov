plugins {
    // Add Java compilation, testing, bundling and other capabilities
    // https://docs.gradle.org/current/userguide/java_plugin.html
    id 'java'

    // Facilitates creating an executable JVM application
    // https://docs.gradle.org/current/userguide/application_plugin.html
    id 'application'

    // Plugin that keeps your code spotless with Gradle
    // https://plugins.gradle.org/plugin/com.diffplug.spotless
    id "com.diffplug.spotless" version "6.2.2"
}
// project spotless formatting rules
apply from: 'spotless.gradle'

// register local project properties
apply from: 'setup.gradle'

repositories {
    mavenCentral()
}

application {
    mainClass = 'io.matshou.cata.tilecov.Main'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(16)
        vendor = JvmVendorSpec.ADOPTOPENJDK
    }
}

dependencies {
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'

    // https://mvnrepository.com/artifact/org.jetbrains/annotations
    implementation 'org.jetbrains:annotations:23.0.0'

    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation group: 'com.google.guava', name: 'guava', version: '31.0.1-jre'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation 'com.google.code.gson:gson:2.8.9'
}

if (project.ext.has('gameDir')) {
    // external files cannot be effectively searched by IDEA
    // so we need to copy these files inside the project root dir
    task updateJsonLibrary(type: Sync) {
        from "${gameDir}/data/json"
        into './lib/json'
        include '**/**/*.json'
    }
}
